---YEAR ON YEAR OPEN BRANCHES
SELECT BRANCH_OPEN_YEAR, COUNT(1) BRANCH_COUNT
  FROM (SELECT LD.BRANCH,
               MIN(TO_CHAR(LD.APPLICATIONDATE, 'YYYY')) BRANCH_OPEN_YEAR
          FROM QC_LOS.QT_LOANDETAIL LD
         WHERE LD.LOANSUBSTATUSID IN
               (1000000004, 1000000010, 1000000006, 1000000007)
         GROUP BY LD.BRANCH)
 GROUP BY BRANCH_OPEN_YEAR
 ORDER BY 1;
 
---ACTIVE USERS WHO USED THE SYSTEM TILL DATE
SELECT COUNT(1)
  FROM QC_USER_AUTH.QM_USER M
 WHERE /*M.COLLECTION_USER ='Y'
   AND*/ M.USERID NOT IN
       (SELECT DISTINCT L1.USERID
          FROM QC_USER_AUTH.QM_USERLOGININFOAUDIT L1
         WHERE TRUNC(L1.LOGINDATETIME, 'MM') > '01-FEB-2025')
   AND M.USERID NOT IN
       (SELECT DISTINCT L1.USERID
          FROM QC_USER_AUTH.QM_USERLOGININFOAUDIT L1
         WHERE TRUNC(L1.LOGINDATETIME, 'MM') < '01-JAN-2019')
   AND EXISTS (SELECT 1
          FROM QC_USER_AUTH.QM_USERLOGININFOAUDIT L1
         WHERE TRUNC(L1.LOGINDATETIME, 'MM') BETWEEN
               '01-JAN-2019' AND '01-FEB-2025'
           AND L1.USERID = M.USERID)
   AND M.IS_ACTIVE = 'A';
   
--TOTAL BRANCHES WHERE LOANS EXISTS
SELECT COUNT(DISTINCT BRANCH) FROM QC_LOS.QT_LOANDETAIL L WHERE L.LOANSUBSTATUSID IN
               (1000000004, 1000000010, 1000000006, 1000000007);
               

--- YEAR ON YEAR ACTIVE USERS
SELECT LAST_LOGIN_YEAR YEAR, COUNT(1) ACTIVE_USERS
  FROM (SELECT USERID, TO_CHAR(MAX(LOGINDATETIME), 'YYYY') LAST_LOGIN_YEAR
          FROM QC_USER_AUTH.QM_USERLOGININFOAUDIT L
         WHERE L.USERID NOT IN
               (SELECT DISTINCT L1.USERID
                  FROM QC_USER_AUTH.QM_USERLOGININFOAUDIT L1
                 WHERE TRUNC(L1.LOGINDATETIME, 'MM') > '01-FEB-2025')
           AND L.USERID NOT IN
               (SELECT DISTINCT L1.USERID
                  FROM QC_USER_AUTH.QM_USERLOGININFOAUDIT L1
                 WHERE TRUNC(L1.LOGINDATETIME, 'MM') < '01-JAN-2019')
         GROUP BY USERID)
 GROUP BY LAST_LOGIN_YEAR
 ORDER BY 1;

/*SELECT DISTINCT L.USERLOGINNAME
  FROM QC_USER_AUTH.QM_USERLOGININFOAUDIT L
 WHERE TRUNC(L.LOGINDATETIME, 'MM') > '01-FEB-2025';*/
 
 SELECT TRUNC(D.DISBURSALDATE,'MONTH') DISB_MONTH, COUNT(1) Monthly_Tranche_Disbursal
   FROM QC_LOS.QT_DISBURSAL D
 WHERE D.DISBURSALDATE >= '01-SEP-2024'
 AND D.AUTH_STATUS = 'A'
GROUP BY TRUNC(D.DISBURSALDATE,'MONTH')
ORDER BY TRUNC(D.DISBURSALDATE,'MONTH');


SELECT TRUNC(O.RECEIPT_DATE,'MONTH') RECPT_MONTH, COUNT(1) Receipts_Count
        FROM QC_LMS.QT_OTC_IMD O
  WHERE O.AUTH_STATUS = 'A'
  AND O.INSTRUMENT_STATUS = 'CL'
  AND O.RECEIPT_DATE >= '01-SEP-2024'
 GROUP BY TRUNC(O.RECEIPT_DATE,'MONTH')
 ORDER BY TRUNC(O.RECEIPT_DATE,'MONTH');
 
 SELECT TRUNC(B.C_AUTH_DATE,'MONTH') BATCH_CL_MONTH, COUNT(1)  
       FROM QC_LMS.QT_BATCHDTL B
  WHERE B.C_AUTH_STATUS = 'A'
  AND B.C_AUTH_DATE >= '01-SEP-2024'
  GROUP BY TRUNC(B.C_AUTH_DATE,'MONTH')
  ORDER BY TRUNC(B.C_AUTH_DATE,'MONTH');
  
  SELECT TRUNC(B.BATCH_DATE,'MONTH') BATCH_MONTH, MAX(B.NOOFINSTRUMENTS) NO_OF_INSTRUMENTS 
       FROM QC_LMS.Qt_Batchhdr B
   WHERE B.BATCH_STATUS = 'CL'
   AND B.BATCH_DATE >= '01-SEP-2024'
   GROUP BY TRUNC(B.BATCH_DATE,'MONTH')
   ORDER BY TRUNC(B.BATCH_DATE,'MONTH');

select A.PROCESS_DATE EOD_DATE, ROUND((A.END_TIME - A.START_TIME)*24,2) EOD_TIME_HR
       from 
       QC_LMS.QT_EXEC_FRW_PROCESS_EXEC_HIST A
    WHERE (TO_CHAR(A.PROCESS_DATE,'DD') IN ('01', '05') OR A.PROCESS_DATE = LAST_DAY(A.PROCESS_DATE)  ) 
    AND A.PROCESS_ID = 1
    AND A.PROCESS_DATE >= '01-SEP-2024'
 ORDER BY 1;

---- OTC

WITH DATE_RANGE AS
 (SELECT TRUNC(ADD_MONTHS(TO_DATE(QC_LOS.GETPARAMVALUE('LOS',
                                                       'BUSINESS DATE'),
                                  'DD-MON-YYYY'),
                          -11),
               'MM') AS START_DATE,
         TO_DATE(QC_LOS.GETPARAMVALUE('LOS',
                                                          'BUSINESS DATE'),
                                     'DD-MON-YYYY') AS END_DATE
    FROM DUAL)
SELECT TO_CHAR(OI.AUTH_DATE, 'MM-YYYY') MONTH_YEAR,
       sum(OI.RECEIPT_AMOUNT) AMOUNT_COLLECTED
  FROM QC_LMS.QT_OTC_IMD OI, DATE_RANGE D
 WHERE OI.AUTH_STATUS = 'A'
   AND OI.INSTRUMENT_STATUS = 'CL'
   AND OI.AUTH_DATE BETWEEN D.START_DATE AND D.END_DATE
 GROUP BY TO_CHAR(OI.AUTH_DATE, 'MM-YYYY');


---INSTR

WITH DATE_RANGE AS
 (SELECT TRUNC(ADD_MONTHS(TO_DATE(QC_LOS.GETPARAMVALUE('LOS',
                                                       'BUSINESS DATE'),
                                  'DD-MON-YYYY'),
                          -11),
               'MM') AS START_DATE,
         TO_DATE(QC_LOS.GETPARAMVALUE('LOS',
                                                          'BUSINESS DATE'),
                                     'DD-MON-YYYY') AS END_DATE
    FROM DUAL)
SELECT TO_CHAR(ED.INSTRUMENT_DATE, 'MM-YYYY') MONTH_YEAR,
       sum(ED.INSTRUMENT_AMT) AMOUNT_COLLECTED
  FROM QC_LMS.QT_INSTR_ENTRY_DTL ED, DATE_RANGE D
 WHERE ED.AUTH_STATUS = 'A'
   AND ED.INSTRUMENT_STATUS = 'CL'--NEED TO VERIFY THE STATUS CHECK
   AND ED.INSTRUMENT_DATE BETWEEN D.START_DATE AND D.END_DATE
 GROUP BY TO_CHAR(ED.INSTRUMENT_DATE, 'MM-YYYY');

--FORECLOSURE

WITH DATE_RANGE AS
 (SELECT TRUNC(ADD_MONTHS(TO_DATE(QC_LOS.GETPARAMVALUE('LOS',
                                                       'BUSINESS DATE'),
                                  'DD-MON-YYYY'),
                          -11),
               'MM') AS START_DATE,
         TO_DATE(QC_LOS.GETPARAMVALUE('LOS',
                                                          'BUSINESS DATE'),
                                     'DD-MON-YYYY') AS END_DATE
    FROM DUAL)
SELECT TO_CHAR(F.AUTH_DATE, 'MM-YYYY') MONTH_YEAR,
       COUNT(DISTINCT F.PROSPECT_ID) CASES_CLOSED_FORECLOSED
  FROM QC_LMS.Qt_Foreclosure F, DATE_RANGE D
 WHERE F.AUTH_STATUS = 'A'
   AND F.AUTH_DATE BETWEEN D.START_DATE AND D.END_DATE
 GROUP BY TO_CHAR( F.AUTH_DATE, 'MM-YYYY');